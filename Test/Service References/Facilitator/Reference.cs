//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.Facilitator {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBagGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class RequestBagGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.Facilitator.RequestBodyGetCustomerOrders[] RQBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.Facilitator.RequestHeaderGetCustomerOrders RQHeaderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.Facilitator.RequestBodyGetCustomerOrders[] RQBody {
            get {
                return this.RQBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.RQBodyField, value) != true)) {
                    this.RQBodyField = value;
                    this.RaisePropertyChanged("RQBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.Facilitator.RequestHeaderGetCustomerOrders RQHeader {
            get {
                return this.RQHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.RQHeaderField, value) != true)) {
                    this.RQHeaderField = value;
                    this.RaisePropertyChanged("RQHeader");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestHeaderGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class RequestHeaderGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> QueryTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> QueryTime {
            get {
                return this.QueryTimeField;
            }
            set {
                if ((this.QueryTimeField.Equals(value) != true)) {
                    this.QueryTimeField = value;
                    this.RaisePropertyChanged("QueryTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBodyGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class RequestBodyGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> OnlyPendingOrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> OnlyPendingOrders {
            get {
                return this.OnlyPendingOrdersField;
            }
            set {
                if ((this.OnlyPendingOrdersField.Equals(value) != true)) {
                    this.OnlyPendingOrdersField = value;
                    this.RaisePropertyChanged("OnlyPendingOrders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBagGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class ResponseBagGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.Facilitator.ResponseBodyGetCustomerOrders[] RSBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.Facilitator.ResponseHeaderGetCustomerOrders RSHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.Facilitator.ResponseBodyGetCustomerOrders[] RSBody {
            get {
                return this.RSBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.RSBodyField, value) != true)) {
                    this.RSBodyField = value;
                    this.RaisePropertyChanged("RSBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.Facilitator.ResponseHeaderGetCustomerOrders RSHeader {
            get {
                return this.RSHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.RSHeaderField, value) != true)) {
                    this.RSHeaderField = value;
                    this.RaisePropertyChanged("RSHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestText {
            get {
                return this.RequestTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestTextField, value) != true)) {
                    this.RequestTextField = value;
                    this.RaisePropertyChanged("RequestText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseText {
            get {
                return this.ResponseTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseTextField, value) != true)) {
                    this.ResponseTextField = value;
                    this.RaisePropertyChanged("ResponseText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultDesc {
            get {
                return this.ResultDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDescField, value) != true)) {
                    this.ResultDescField = value;
                    this.RaisePropertyChanged("ResultDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseHeaderGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class ResponseHeaderGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalNumOfOrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalNumOfOrders {
            get {
                return this.TotalNumOfOrdersField;
            }
            set {
                if ((this.TotalNumOfOrdersField.Equals(value) != true)) {
                    this.TotalNumOfOrdersField = value;
                    this.RaisePropertyChanged("TotalNumOfOrders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseBodyGetCustomerOrders", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class ResponseBodyGetCustomerOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.Facilitator.Order _OrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.Facilitator.Order _Order {
            get {
                return this._OrderField;
            }
            set {
                if ((object.ReferenceEquals(this._OrderField, value) != true)) {
                    this._OrderField = value;
                    this.RaisePropertyChanged("_Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/StringBasedCommunicationFacilitator")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc {
            get {
                return this.DescField;
            }
            set {
                if ((object.ReferenceEquals(this.DescField, value) != true)) {
                    this.DescField = value;
                    this.RaisePropertyChanged("Desc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Facilitator.IStringBasedCommunicationFacilitatorService")]
    public interface IStringBasedCommunicationFacilitatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStringBasedCommunicationFacilitatorService/GetCustomerOrders", ReplyAction="http://tempuri.org/IStringBasedCommunicationFacilitatorService/GetCustomerOrdersR" +
            "esponse")]
        Test.Facilitator.ResponseBagGetCustomerOrders GetCustomerOrders(Test.Facilitator.RequestBagGetCustomerOrders requestBag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStringBasedCommunicationFacilitatorService/GetCustomerOrders", ReplyAction="http://tempuri.org/IStringBasedCommunicationFacilitatorService/GetCustomerOrdersR" +
            "esponse")]
        System.Threading.Tasks.Task<Test.Facilitator.ResponseBagGetCustomerOrders> GetCustomerOrdersAsync(Test.Facilitator.RequestBagGetCustomerOrders requestBag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStringBasedCommunicationFacilitatorServiceChannel : Test.Facilitator.IStringBasedCommunicationFacilitatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StringBasedCommunicationFacilitatorServiceClient : System.ServiceModel.ClientBase<Test.Facilitator.IStringBasedCommunicationFacilitatorService>, Test.Facilitator.IStringBasedCommunicationFacilitatorService {
        
        public StringBasedCommunicationFacilitatorServiceClient() {
        }
        
        public StringBasedCommunicationFacilitatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StringBasedCommunicationFacilitatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StringBasedCommunicationFacilitatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StringBasedCommunicationFacilitatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Test.Facilitator.ResponseBagGetCustomerOrders GetCustomerOrders(Test.Facilitator.RequestBagGetCustomerOrders requestBag) {
            return base.Channel.GetCustomerOrders(requestBag);
        }
        
        public System.Threading.Tasks.Task<Test.Facilitator.ResponseBagGetCustomerOrders> GetCustomerOrdersAsync(Test.Facilitator.RequestBagGetCustomerOrders requestBag) {
            return base.Channel.GetCustomerOrdersAsync(requestBag);
        }
    }
}
